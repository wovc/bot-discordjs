import { ActionRowBuilder, ButtonBuilder, EmbedBuilder } from "discord.js"

export async function PConfigsChannels({ interaction }) {
    const MainEmbed = new EmbedBuilder()
        .setDescription(`## ‚öôÔ∏è Painel de Configura√ß√£o de Canais
\`üì•\` Logs de Entrada
- Saiba exatamente quem entrou no servidor e por qual link de convite a pessoa chegou. Isso ajuda a monitorar o crescimento da comunidade e identificar de onde v√™m os novos membros.

\`üìì\` Logs de Convites
- Acompanhe todas as altera√ß√µes nos convites: quando um √© criado, exclu√≠do ou utilizado. Assim voc√™ mant√©m controle total sobre como as pessoas chegam at√© o servidor.

\`üö™\` Logs de Sa√≠da
- Fique informado(a) sempre que algu√©m sair do servidor. √â √∫til para entender a movimenta√ß√£o dos membros e manter o hist√≥rico do servidor sempre atualizado.

\`üí°\` Dica: Configure esses canais em locais separados para n√£o poluir o chat principal. Assim, voc√™ ter√° um hist√≥rico organizado, acess√≠vel apenas para a equipe de modera√ß√£o.`)
        .setThumbnail(interaction.guild.iconURL())
        .setTimestamp();

    const MainAction = new ActionRowBuilder()
        .addComponents(
            new ButtonBuilder()
                .setCustomId("Button.Logs.Entrada")
                .setStyle(2)
                .setLabel("Logs Entrada")
                .setEmoji("<:entry:1406257257662120026>"),

            new ButtonBuilder()
                .setCustomId("Button.Logs.Invite")
                .setStyle(2)
                .setLabel("Logs Invite")
                .setEmoji("<:invitation:1406258062561378304>"),

            new ButtonBuilder()
                .setCustomId("Button.Logs.Saida")
                .setStyle(2)
                .setLabel("Logs Sa√≠da")
                .setEmoji("<:exit:1406258374454022154>")

        )
    const TwoAction = new ActionRowBuilder()
        .addComponents(
            new ButtonBuilder()
                .setCustomId("Button.Logs.Check")
                .setStyle(2)
                .setLabel("Logs Check")
                .setEmoji("<:check1:1406396305747476520>"),

            new ButtonBuilder()
                .setCustomId("Button.Voltar.PDefinitions")
                .setStyle(2)
                .setEmoji("<:seta:1406041009711747162>")
                .setLabel("Voltar")
        )
    return { embeds: [MainEmbed], components: [MainAction, TwoAction] }
}